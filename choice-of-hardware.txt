Choice of Hardware

As mentioned earlier, harware security module is a standalone hardware computing device. Encryption algorithms usually use lot of strings which are produced during runtime of the program. Because these strings are produced on runtime so they are stored on RAM. For encryption of a small string, several kilobytes of RAM is used in symmetric encryption. Memory usage is even more greater in asymmetric encryption. Hardware Security Modules are mostly used with servers which means these should have enough power to process a lot of data because even servers with medium traffic may require several kilobytes of data encypted/decrypted per second. Processing speed of HSM can be found using benchmarking tool. A detail of speed test of our HSM is added in Benchmarking section. So, while choosing hardware for HSM, processing power of HSM should be considered. Following is a list of hardwares which we chose for our HSM.

-Arduni Uno
First of all, we implemented a DES algorithm on windows in C++. It worked fine on windows. We compiled our code for Arduino Uno. It compiled successfully but it gave a warning which stated "Global variables use 1,906 bytes (93%) of dynamic memory, leaving -270 bytes for local variables. Maximum is 2,048 bytes." The functions didn't even run and arduino uno's memory was full. This was just a DES algorithm. We had to implement more encryption algorithms on our HSM alongwith communication with other hardware and logical protection of keys. Arduino Uno can not be used for this purpose so we choose another model of arduino with greater RAM and greater clock speed.

-Arduino Due
